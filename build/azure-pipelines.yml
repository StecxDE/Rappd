trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

stages:

- stage: Build
  jobs:
  - job: BuildProjects
    steps:
    - checkout: self
    - task: UseDotNet@2
      displayName: Install .NET SDK 6.x
      inputs:
        packageType: 'sdk'
        version: '6.x'
    - task: DotNetCoreCLI@2
      displayName: Restore NuGet-Packages
      inputs:
        command: 'restore'
        projects: 'tests/**/*.csproj'
        feedsToUse: 'select'
        vstsFeed: '8ca3377a-8442-4cfd-a59e-3a4e0145faf9/978ff997-a2ff-4c4b-bb98-1dee8090e599'
    - task: DotNetCoreCLI@2
      displayName: Build test projects
      inputs:
        command: 'build'
        projects: 'tests/**/*.csproj'
    - task: CopyFiles@2
      displayName: Copy binaries
      inputs:
        Contents: '**/bin/**'
        TargetFolder: '$(Build.StagingDirectory)/bin'
    - task: PublishBuildArtifacts@1
      displayName: Publish binaries artifact
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)/bin'
        ArtifactName: 'bin'
        publishLocation: 'Container'

- stage: Test
  dependsOn: Build
  jobs:
  - job: ExecuteTests
    steps:
    - checkout: self
    - task: DownloadBuildArtifacts@1
      displayName: Download binaries artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'bin'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: CopyFiles@2
      displayName: Copy binaries
      inputs:
        SourceFolder: '$(System.ArtifactsDirectory)/bin'
        Contents: '**'
        TargetFolder: '$(Build.Repository.LocalPath)'
    - task: UseDotNet@2
      displayName: Install .NET SDK 6.x
      inputs:
        packageType: 'sdk'
        version: '6.x'
    - task: DotNetCoreCLI@2
      displayName: Run test projects
      inputs:
        command: 'test'
        projects: 'tests/**/*.csproj'
        arguments: '--logger trx --collect:"XPlat Code Coverage" --results-directory "$(Build.StagingDirectory)/test"'
        publishTestResults: false
    - task: PublishBuildArtifacts@1
      displayName: Publish test artifact
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)/test'
        ArtifactName: 'test'
        publishLocation: 'Container'
  - job: ProcessTestResults
    dependsOn: ExecuteTests
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      displayName: Download test artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'test'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: UseDotNet@2
      displayName: Install .NET SDK 6.x
      inputs:
        packageType: 'sdk'
        version: '6.x'
    - task: DotNetCoreCLI@2
      displayName: Install dotnet-coverage tool
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global dotnet-coverage'
    - script: mkdir $(System.ArtifactsDirectory)/merged
    - task: DotNetCoreCLI@2
      displayName: Merge coverage reports
      inputs:
        command: custom
        custom: coverage
        arguments: 'merge $(System.ArtifactsDirectory)/test/*.cobertura.xml --recursive --output $(Build.StagingDirectory)/merged/merged.cobertura.xml --output-format cobertura'
    - task: PublishBuildArtifacts@1
      displayName: Publish merged artifact
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)/merged'
        ArtifactName: 'merged'
        publishLocation: 'Container'

- stage: Publish
  dependsOn: Test
  jobs:
  - job: UploadToCodacy
    condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/release', 'refs/heads/development'))
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      displayName: Download merged artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'merged'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: Bash@3
      displayName: Run upload script
      inputs:
        targetType: 'inline'
        script: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r $(System.ArtifactsDirectory)/merged/merged.cobertura.xml
      env:
        CODACY_PROJECT_TOKEN: $(CODACYPROJECTTOKEN)
  - job: UploadToDevOps
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      displayName: Download test artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'test'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: DownloadBuildArtifacts@1
      displayName: Download merged artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'merged'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: UseDotNet@2
      displayName: Install .NET SDK 7.0.x
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
    - task: PublishTestResults@2
      displayName: Upload test results
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '*.trx'
        searchFolder: '$(System.ArtifactsDirectory)/test'
        mergeTestResults: true
    - task: PublishCodeCoverageResults@1
      displayName: Upload coverage results
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.ArtifactsDirectory)/merged/merged.cobertura.xml'