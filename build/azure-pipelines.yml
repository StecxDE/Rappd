trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global dotnet-coverage'
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'tests/**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: '8ca3377a-8442-4cfd-a59e-3a4e0145faf9/978ff997-a2ff-4c4b-bb98-1dee8090e599'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'tests/**/*.csproj'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    arguments: '--logger trx --collect:"XPlat Code Coverage" --results-directory "$(Build.StagingDirectory)" --no-restore'
    publishTestResults: false
- task: DotNetCoreCLI@2
  displayName: 'dotnet custom'
  inputs:
    command: custom
    custom: coverage
    arguments: 'merge $(Build.StagingDirectory)/*.cobertura.xml --recursive --output $(Build.StagingDirectory)/merged.cobertura.xml --output-format cobertura'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.StagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r $(Build.StagingDirectory)/merged.cobertura.xml
  env:
    CODACY_PROJECT_TOKEN: $(CODACYPROJECTTOKEN)
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'XUnit'
    testResultsFiles: '*.trx'
    searchFolder: '$(Build.StagingDirectory)'
    mergeTestResults: true
- task: PublishCodeCoverageResults@2
  inputs:
    summaryFileLocation: '$(Build.StagingDirectory)/merged.cobertura.xml'